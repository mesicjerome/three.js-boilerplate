var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _three = require('three');
class Sketch {
  constructor(options) {
    this.time = 0;
    this.addObjects();
    this.render();
  }
  addObjects() {
    geometry = new _three.BoxGeometry(0.2, 0.2, 0.2);
    material = new _three.MeshNormalMaterial();
    mesh = new _three.Mesh(geometry, material);
    scene.add(mesh);
  }
  render() {
    this.time += 0.05;
    this.mesh.rotation.x = this.time / 2000;
    this.mesh.rotation.y = this.time / 1000;
    this.renderer.render(this.scene, this.amera);
    console.log(this.time);
    requestAnimationFrame(this.render.bind(this));
  }
}
exports.default = Sketch;
new Sketch();
let camera, scene, renderer;
let geometry, material, mesh;
init();
function init() {
  camera = new _three.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 10);
  camera.position.z = 1;
  scene = new _three.Scene();
  renderer = new _three.WebGLRenderer({
    antialias: true
  });
  renderer.setSize(window.innerWidth, window.innerHeight);
  renderer.setAnimationLoop(animation);
  let container = document.getElementById('container');
  container.appendChild(renderer.domElement);
}
function animation(time) {}
